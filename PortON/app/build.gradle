apply plugin: 'com.android.application'
apply plugin: 'com.fernandocejas.frodo'
//apply plugin: 'io.fabric'
apply from: "$project.rootDir/script-git-version.gradle"
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'



android {
    signingConfigs {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        releaseKey {
            keyAlias properties.getProperty('releaseKeyAlias')
            keyPassword properties.getProperty('releaseKeyPassword')
            storeFile file(properties.getProperty('releaseStoreFile'))
            storePassword properties.getProperty('releaseStorePassword')
        }
        debugKey {
            keyAlias properties.getProperty('debugKeyAlias')
            keyPassword properties.getProperty('debugKeyPassword')
            storeFile file(properties.getProperty('debugStoreFile'))
            storePassword properties.getProperty('debugStorePassword')
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileOptions.incremental = false
    flavorDimensions "versionCode"
    //TODO: This is a workaround when there are libraries using rxjava1.x and others rxjava2.x(rx-preferences) but this increases the method count.
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        //TODO understand the next two exclusions
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'
    }
    defaultConfig {
        applicationId "com.urbit_iot.porton"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode gitVersionCodeTime
        versionName gitVersionName

        testInstrumentationRunner 'com.urbit_iot.porton.PortonMockTestRunner'
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            applicationIdSuffix = ".debug"
            signingConfig signingConfigs.debugKey
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled false
            useProguard true
            applicationIdSuffix = ".release"
            signingConfig signingConfigs.releaseKey
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            //applicationIdSuffix = ".mock"
            applicationId "com.urbit_iot.porton.mock"
        }
        prod {
            applicationId "com.urbit_iot.porton.prod"
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "porton"
            outputFileName = appName+"-${variant.versionName}.apk"
        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        all{
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    /*
    sourceSets {
        main {
            java {
                srcDir 'src'
                exclude 'main/java/com/urbit_iot/porton/data/source/internet/UModMqttService.java'
            }
        }
    }
    */

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'


    // App's dependencies, including test
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    api "com.google.guava:guava:$rootProject.guavaVersion"

    //RXJAVA
    implementation "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex:rxandroid:$rootProject.rxandroidVersion"

    //RX DNS-SD
    implementation "com.github.andriydruk:rxdnssd:$rootProject.rxDNSSDVersion"

    //RX BLE
    implementation "com.polidea.rxandroidble:rxandroidble:$rootProject.polideaBleVersion"

    //SQLBRITE
    implementation "com.squareup.sqlbrite:sqlbrite:$rootProject.sqlbriteVersion"

    //GSON
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    //DAGGER2
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    // compileOnly 'org.glassfish:javax.annotation:10.0-b28' not needed for dagger > 2.1-SNAPSHOT
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"

    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //libphonenumber
    implementation "com.googlecode.libphonenumber:libphonenumber:$rootProject.libphonenumber"

    //rx-preferences -> Forces RxJava2.x
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rootProject.rxPreferences"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.burgstaller:okhttp-digest:$rootProject.okhttpDigest"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitConverterGson"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitAdapterRxJava"

    //reactiveWiFi
    implementation "com.github.pwittchen:reactivewifi:$rootProject.reactivewifiVersion"

    //Apache Commons IO
    implementation "commons-io:commons-io:$rootProject.apacheCommonsIOVersion"

    //Slide to Act View
    implementation "com.ncorti:slidetoact:$rootProject.slidetoactVersion"
    implementation 'com.github.MAXDeliveryNG:slideview:1.1.0'

    //ping LAN addresses to determine reachable host
    //implementation 'com.github.stealthcopter:AndroidNetworkTools:0.3.08'

    //mqtt paho wrapper uses rxjava2
    //implementation 'net.eusashead.mqtt:rxmqtt:1.1.1.RELEASE' //unused

    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$rootProject.pahoMqttVersion"
    //implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    implementation "com.github.akarnokd:rxjava2-interop:$rootProject.rxInteropVersion"
    //implementation 'com.bugfender.sdk:android:1.+'
    implementation "com.github.tony19:timber-loggly:$rootProject.timberLogglyVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlyticsVersion") {
        transitive = true
    }

    //implementation 'io.reactivex:rxnetty-http:0.5.2'
    implementation "pl.charmas.android:android-reactive-location2:$rootProject.reactiveLocation2Version"
    implementation "com.google.android.gms:play-services-location:$rootProject.googlePlayLocationVersion"
    implementation "com.google.android.gms:play-services-places:$rootProject.googlePlayPlacesVersion"

    implementation "com.yarolegovich:lovely-dialog:$rootProject.lovelyDialogVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"

    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest:$rootProject.ext.hamcrestVersion"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's runner and rules
    /*
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.runnerVersion"
    */
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"

    //imports mockito to work on instrumentation tests
    androidTestImplementation ("org.mockito:mockito-android:$rootProject.ext.mockitoVersion"){
        exclude group: 'net.bytebuddy', module: 'byte-buddy'
        exclude group: 'net.bytebuddy', module: 'byte-buddy-android'
        exclude group: 'net.bytebuddy', module: 'byte-buddy-agent'
    }
    // Explicitly include byte-buddy 1.8.22 to fix a build error with Mockito 2.23
    androidTestImplementation "net.bytebuddy:byte-buddy:$rootProject.ext.byteBuddyVersion"
    androidTestImplementation "net.bytebuddy:byte-buddy-android:$rootProject.ext.byteBuddyVersion"
    androidTestImplementation "net.bytebuddy:byte-buddy-agent:$rootProject.ext.byteBuddyVersion"

    //The only way gradle will pass is using dexmaker from linkedin repository...
    androidTestImplementation "com.linkedin.dexmaker:dexmaker:$rootProject.ext.linkedinDexmakerVersion"

    // Espresso UI Testing
    /*
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    */

    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.ext.rulesVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"



    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:1.0.0"
    androidTestImplementation "androidx.legacy:legacy-support-v4:1.0.0"
    androidTestImplementation "androidx.recyclerview:recyclerview:1.0.0"
    androidTestImplementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.google.android.material:material:1.0.0"
}
